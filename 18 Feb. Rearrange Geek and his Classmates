                                                            // 1. Time Complexity O(N) and space complexity O(N)

// HashMap Solution
// Not worked for large test case because in worst case hashmap gives O(N) time complexity.

class Solution 
{ 
    void prank(long[] arr, int n)  
    { 
        // code here
        HashMap<Long,Integer> hm=new HashMap<>();
        long ans[]=new long[n];
        Arrays.fill(ans,0);
        for (int i=0;i<n;i++)
        {
            hm.put(arr[i],i);
        }
        for (int i=0;i<n;i++)
        {
            long x=arr[i];
            ans[(int)hm.get((long)i)]=x;
        }
        for (int i=0;i<n;i++)
        {
            arr[i]=ans[i];
        }
    }
} 

                                                                  // 2. Time complexity O(N) and Space Complexity O(1)
  
class Solution
{ 
    void prank(long[] a, int n)  
    { 
        // code here
        for(int i=0;i<n;i++)
        {
            a[i]=a[i]+(a[(int)a[i]]%n)*n;
        }
        for (int i=0;i<n;i++)
        {
            a[i]=a[i]/n;
        }
    }
} 
